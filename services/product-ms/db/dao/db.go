// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package dao

import (
	"context"
	"database/sql"
	"fmt"
)

type DBTX interface {
	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
	PrepareContext(context.Context, string) (*sql.Stmt, error)
	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
	QueryRowContext(context.Context, string, ...interface{}) *sql.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

func Prepare(ctx context.Context, db DBTX) (*Queries, error) {
	q := Queries{db: db}
	var err error
	if q.addDiscountCategoryStmt, err = db.PrepareContext(ctx, AddDiscountCategory); err != nil {
		return nil, fmt.Errorf("error preparing query AddDiscountCategory: %w", err)
	}
	if q.addDiscountProductStmt, err = db.PrepareContext(ctx, AddDiscountProduct); err != nil {
		return nil, fmt.Errorf("error preparing query AddDiscountProduct: %w", err)
	}
	if q.addProductCategoryStmt, err = db.PrepareContext(ctx, AddProductCategory); err != nil {
		return nil, fmt.Errorf("error preparing query AddProductCategory: %w", err)
	}
	if q.addVoucherCategoryStmt, err = db.PrepareContext(ctx, AddVoucherCategory); err != nil {
		return nil, fmt.Errorf("error preparing query AddVoucherCategory: %w", err)
	}
	if q.addVoucherProductStmt, err = db.PrepareContext(ctx, AddVoucherProduct); err != nil {
		return nil, fmt.Errorf("error preparing query AddVoucherProduct: %w", err)
	}
	if q.countActiveDiscountsStmt, err = db.PrepareContext(ctx, CountActiveDiscounts); err != nil {
		return nil, fmt.Errorf("error preparing query CountActiveDiscounts: %w", err)
	}
	if q.countActiveVouchersStmt, err = db.PrepareContext(ctx, CountActiveVouchers); err != nil {
		return nil, fmt.Errorf("error preparing query CountActiveVouchers: %w", err)
	}
	if q.countCategoryProductsStmt, err = db.PrepareContext(ctx, CountCategoryProducts); err != nil {
		return nil, fmt.Errorf("error preparing query CountCategoryProducts: %w", err)
	}
	if q.countDiscountsStmt, err = db.PrepareContext(ctx, CountDiscounts); err != nil {
		return nil, fmt.Errorf("error preparing query CountDiscounts: %w", err)
	}
	if q.countProductVariantsStmt, err = db.PrepareContext(ctx, CountProductVariants); err != nil {
		return nil, fmt.Errorf("error preparing query CountProductVariants: %w", err)
	}
	if q.countProductsStmt, err = db.PrepareContext(ctx, CountProducts); err != nil {
		return nil, fmt.Errorf("error preparing query CountProducts: %w", err)
	}
	if q.countProductsByStatusStmt, err = db.PrepareContext(ctx, CountProductsByStatus); err != nil {
		return nil, fmt.Errorf("error preparing query CountProductsByStatus: %w", err)
	}
	if q.countStoreCategoriesStmt, err = db.PrepareContext(ctx, CountStoreCategories); err != nil {
		return nil, fmt.Errorf("error preparing query CountStoreCategories: %w", err)
	}
	if q.countStoreCategoriesByParentStmt, err = db.PrepareContext(ctx, CountStoreCategoriesByParent); err != nil {
		return nil, fmt.Errorf("error preparing query CountStoreCategoriesByParent: %w", err)
	}
	if q.countStoresStmt, err = db.PrepareContext(ctx, CountStores); err != nil {
		return nil, fmt.Errorf("error preparing query CountStores: %w", err)
	}
	if q.countStoresByOwnerStmt, err = db.PrepareContext(ctx, CountStoresByOwner); err != nil {
		return nil, fmt.Errorf("error preparing query CountStoresByOwner: %w", err)
	}
	if q.countVouchersStmt, err = db.PrepareContext(ctx, CountVouchers); err != nil {
		return nil, fmt.Errorf("error preparing query CountVouchers: %w", err)
	}
	if q.createDiscountStmt, err = db.PrepareContext(ctx, CreateDiscount); err != nil {
		return nil, fmt.Errorf("error preparing query CreateDiscount: %w", err)
	}
	if q.createProductStmt, err = db.PrepareContext(ctx, CreateProduct); err != nil {
		return nil, fmt.Errorf("error preparing query CreateProduct: %w", err)
	}
	if q.createProductImageStmt, err = db.PrepareContext(ctx, CreateProductImage); err != nil {
		return nil, fmt.Errorf("error preparing query CreateProductImage: %w", err)
	}
	if q.createProductVariantStmt, err = db.PrepareContext(ctx, CreateProductVariant); err != nil {
		return nil, fmt.Errorf("error preparing query CreateProductVariant: %w", err)
	}
	if q.createStoreStmt, err = db.PrepareContext(ctx, CreateStore); err != nil {
		return nil, fmt.Errorf("error preparing query CreateStore: %w", err)
	}
	if q.createStoreCategoryStmt, err = db.PrepareContext(ctx, CreateStoreCategory); err != nil {
		return nil, fmt.Errorf("error preparing query CreateStoreCategory: %w", err)
	}
	if q.createVoucherStmt, err = db.PrepareContext(ctx, CreateVoucher); err != nil {
		return nil, fmt.Errorf("error preparing query CreateVoucher: %w", err)
	}
	if q.deleteDiscountStmt, err = db.PrepareContext(ctx, DeleteDiscount); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteDiscount: %w", err)
	}
	if q.deleteProductStmt, err = db.PrepareContext(ctx, DeleteProduct); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteProduct: %w", err)
	}
	if q.deleteProductImageStmt, err = db.PrepareContext(ctx, DeleteProductImage); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteProductImage: %w", err)
	}
	if q.deleteProductImagesStmt, err = db.PrepareContext(ctx, DeleteProductImages); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteProductImages: %w", err)
	}
	if q.deleteProductVariantStmt, err = db.PrepareContext(ctx, DeleteProductVariant); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteProductVariant: %w", err)
	}
	if q.deleteProductVariantsStmt, err = db.PrepareContext(ctx, DeleteProductVariants); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteProductVariants: %w", err)
	}
	if q.deleteStoreStmt, err = db.PrepareContext(ctx, DeleteStore); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteStore: %w", err)
	}
	if q.deleteStoreCategoryStmt, err = db.PrepareContext(ctx, DeleteStoreCategory); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteStoreCategory: %w", err)
	}
	if q.deleteVariantImagesStmt, err = db.PrepareContext(ctx, DeleteVariantImages); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteVariantImages: %w", err)
	}
	if q.deleteVoucherStmt, err = db.PrepareContext(ctx, DeleteVoucher); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteVoucher: %w", err)
	}
	if q.getCategoryProductsStmt, err = db.PrepareContext(ctx, GetCategoryProducts); err != nil {
		return nil, fmt.Errorf("error preparing query GetCategoryProducts: %w", err)
	}
	if q.getDiscountStmt, err = db.PrepareContext(ctx, GetDiscount); err != nil {
		return nil, fmt.Errorf("error preparing query GetDiscount: %w", err)
	}
	if q.getDiscountByCodeStmt, err = db.PrepareContext(ctx, GetDiscountByCode); err != nil {
		return nil, fmt.Errorf("error preparing query GetDiscountByCode: %w", err)
	}
	if q.getDiscountCategoriesStmt, err = db.PrepareContext(ctx, GetDiscountCategories); err != nil {
		return nil, fmt.Errorf("error preparing query GetDiscountCategories: %w", err)
	}
	if q.getDiscountProductsStmt, err = db.PrepareContext(ctx, GetDiscountProducts); err != nil {
		return nil, fmt.Errorf("error preparing query GetDiscountProducts: %w", err)
	}
	if q.getGalleryProductImagesStmt, err = db.PrepareContext(ctx, GetGalleryProductImages); err != nil {
		return nil, fmt.Errorf("error preparing query GetGalleryProductImages: %w", err)
	}
	if q.getMainProductImageStmt, err = db.PrepareContext(ctx, GetMainProductImage); err != nil {
		return nil, fmt.Errorf("error preparing query GetMainProductImage: %w", err)
	}
	if q.getProductStmt, err = db.PrepareContext(ctx, GetProduct); err != nil {
		return nil, fmt.Errorf("error preparing query GetProduct: %w", err)
	}
	if q.getProductBySlugStmt, err = db.PrepareContext(ctx, GetProductBySlug); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductBySlug: %w", err)
	}
	if q.getProductCategoriesStmt, err = db.PrepareContext(ctx, GetProductCategories); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductCategories: %w", err)
	}
	if q.getProductImageStmt, err = db.PrepareContext(ctx, GetProductImage); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductImage: %w", err)
	}
	if q.getProductVariantStmt, err = db.PrepareContext(ctx, GetProductVariant); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductVariant: %w", err)
	}
	if q.getStoreStmt, err = db.PrepareContext(ctx, GetStore); err != nil {
		return nil, fmt.Errorf("error preparing query GetStore: %w", err)
	}
	if q.getStoreBySlugStmt, err = db.PrepareContext(ctx, GetStoreBySlug); err != nil {
		return nil, fmt.Errorf("error preparing query GetStoreBySlug: %w", err)
	}
	if q.getStoreCategoryStmt, err = db.PrepareContext(ctx, GetStoreCategory); err != nil {
		return nil, fmt.Errorf("error preparing query GetStoreCategory: %w", err)
	}
	if q.getStoreCategoryBySlugStmt, err = db.PrepareContext(ctx, GetStoreCategoryBySlug); err != nil {
		return nil, fmt.Errorf("error preparing query GetStoreCategoryBySlug: %w", err)
	}
	if q.getThumbnailProductImageStmt, err = db.PrepareContext(ctx, GetThumbnailProductImage); err != nil {
		return nil, fmt.Errorf("error preparing query GetThumbnailProductImage: %w", err)
	}
	if q.getVariantByBarcodeStmt, err = db.PrepareContext(ctx, GetVariantByBarcode); err != nil {
		return nil, fmt.Errorf("error preparing query GetVariantByBarcode: %w", err)
	}
	if q.getVariantBySKUStmt, err = db.PrepareContext(ctx, GetVariantBySKU); err != nil {
		return nil, fmt.Errorf("error preparing query GetVariantBySKU: %w", err)
	}
	if q.getVoucherStmt, err = db.PrepareContext(ctx, GetVoucher); err != nil {
		return nil, fmt.Errorf("error preparing query GetVoucher: %w", err)
	}
	if q.getVoucherByCodeStmt, err = db.PrepareContext(ctx, GetVoucherByCode); err != nil {
		return nil, fmt.Errorf("error preparing query GetVoucherByCode: %w", err)
	}
	if q.getVoucherCategoriesStmt, err = db.PrepareContext(ctx, GetVoucherCategories); err != nil {
		return nil, fmt.Errorf("error preparing query GetVoucherCategories: %w", err)
	}
	if q.getVoucherProductsStmt, err = db.PrepareContext(ctx, GetVoucherProducts); err != nil {
		return nil, fmt.Errorf("error preparing query GetVoucherProducts: %w", err)
	}
	if q.incrementDiscountUsageStmt, err = db.PrepareContext(ctx, IncrementDiscountUsage); err != nil {
		return nil, fmt.Errorf("error preparing query IncrementDiscountUsage: %w", err)
	}
	if q.incrementVoucherUsageStmt, err = db.PrepareContext(ctx, IncrementVoucherUsage); err != nil {
		return nil, fmt.Errorf("error preparing query IncrementVoucherUsage: %w", err)
	}
	if q.listActiveDiscountsStmt, err = db.PrepareContext(ctx, ListActiveDiscounts); err != nil {
		return nil, fmt.Errorf("error preparing query ListActiveDiscounts: %w", err)
	}
	if q.listActiveVouchersStmt, err = db.PrepareContext(ctx, ListActiveVouchers); err != nil {
		return nil, fmt.Errorf("error preparing query ListActiveVouchers: %w", err)
	}
	if q.listDiscountsStmt, err = db.PrepareContext(ctx, ListDiscounts); err != nil {
		return nil, fmt.Errorf("error preparing query ListDiscounts: %w", err)
	}
	if q.listFeaturedProductsStmt, err = db.PrepareContext(ctx, ListFeaturedProducts); err != nil {
		return nil, fmt.Errorf("error preparing query ListFeaturedProducts: %w", err)
	}
	if q.listProductImagesStmt, err = db.PrepareContext(ctx, ListProductImages); err != nil {
		return nil, fmt.Errorf("error preparing query ListProductImages: %w", err)
	}
	if q.listProductVariantsStmt, err = db.PrepareContext(ctx, ListProductVariants); err != nil {
		return nil, fmt.Errorf("error preparing query ListProductVariants: %w", err)
	}
	if q.listProductsStmt, err = db.PrepareContext(ctx, ListProducts); err != nil {
		return nil, fmt.Errorf("error preparing query ListProducts: %w", err)
	}
	if q.listProductsByStatusStmt, err = db.PrepareContext(ctx, ListProductsByStatus); err != nil {
		return nil, fmt.Errorf("error preparing query ListProductsByStatus: %w", err)
	}
	if q.listRootStoreCategoriesStmt, err = db.PrepareContext(ctx, ListRootStoreCategories); err != nil {
		return nil, fmt.Errorf("error preparing query ListRootStoreCategories: %w", err)
	}
	if q.listStoreCategoriesStmt, err = db.PrepareContext(ctx, ListStoreCategories); err != nil {
		return nil, fmt.Errorf("error preparing query ListStoreCategories: %w", err)
	}
	if q.listStoreCategoriesByParentStmt, err = db.PrepareContext(ctx, ListStoreCategoriesByParent); err != nil {
		return nil, fmt.Errorf("error preparing query ListStoreCategoriesByParent: %w", err)
	}
	if q.listStoresStmt, err = db.PrepareContext(ctx, ListStores); err != nil {
		return nil, fmt.Errorf("error preparing query ListStores: %w", err)
	}
	if q.listStoresByOwnerStmt, err = db.PrepareContext(ctx, ListStoresByOwner); err != nil {
		return nil, fmt.Errorf("error preparing query ListStoresByOwner: %w", err)
	}
	if q.listVariantImagesStmt, err = db.PrepareContext(ctx, ListVariantImages); err != nil {
		return nil, fmt.Errorf("error preparing query ListVariantImages: %w", err)
	}
	if q.listVouchersStmt, err = db.PrepareContext(ctx, ListVouchers); err != nil {
		return nil, fmt.Errorf("error preparing query ListVouchers: %w", err)
	}
	if q.removeAllProductCategoriesStmt, err = db.PrepareContext(ctx, RemoveAllProductCategories); err != nil {
		return nil, fmt.Errorf("error preparing query RemoveAllProductCategories: %w", err)
	}
	if q.removeDiscountCategoryStmt, err = db.PrepareContext(ctx, RemoveDiscountCategory); err != nil {
		return nil, fmt.Errorf("error preparing query RemoveDiscountCategory: %w", err)
	}
	if q.removeDiscountProductStmt, err = db.PrepareContext(ctx, RemoveDiscountProduct); err != nil {
		return nil, fmt.Errorf("error preparing query RemoveDiscountProduct: %w", err)
	}
	if q.removeProductCategoryStmt, err = db.PrepareContext(ctx, RemoveProductCategory); err != nil {
		return nil, fmt.Errorf("error preparing query RemoveProductCategory: %w", err)
	}
	if q.removeVoucherCategoryStmt, err = db.PrepareContext(ctx, RemoveVoucherCategory); err != nil {
		return nil, fmt.Errorf("error preparing query RemoveVoucherCategory: %w", err)
	}
	if q.removeVoucherProductStmt, err = db.PrepareContext(ctx, RemoveVoucherProduct); err != nil {
		return nil, fmt.Errorf("error preparing query RemoveVoucherProduct: %w", err)
	}
	if q.updateDiscountStmt, err = db.PrepareContext(ctx, UpdateDiscount); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateDiscount: %w", err)
	}
	if q.updateImageSortOrderStmt, err = db.PrepareContext(ctx, UpdateImageSortOrder); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateImageSortOrder: %w", err)
	}
	if q.updateProductStmt, err = db.PrepareContext(ctx, UpdateProduct); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateProduct: %w", err)
	}
	if q.updateProductCategoriesStmt, err = db.PrepareContext(ctx, UpdateProductCategories); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateProductCategories: %w", err)
	}
	if q.updateProductImageStmt, err = db.PrepareContext(ctx, UpdateProductImage); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateProductImage: %w", err)
	}
	if q.updateProductInventoryStmt, err = db.PrepareContext(ctx, UpdateProductInventory); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateProductInventory: %w", err)
	}
	if q.updateProductVariantStmt, err = db.PrepareContext(ctx, UpdateProductVariant); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateProductVariant: %w", err)
	}
	if q.updateStoreStmt, err = db.PrepareContext(ctx, UpdateStore); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateStore: %w", err)
	}
	if q.updateStoreCategoryStmt, err = db.PrepareContext(ctx, UpdateStoreCategory); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateStoreCategory: %w", err)
	}
	if q.updateVariantInventoryStmt, err = db.PrepareContext(ctx, UpdateVariantInventory); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateVariantInventory: %w", err)
	}
	if q.updateVoucherStmt, err = db.PrepareContext(ctx, UpdateVoucher); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateVoucher: %w", err)
	}
	return &q, nil
}

func (q *Queries) Close() error {
	var err error
	if q.addDiscountCategoryStmt != nil {
		if cerr := q.addDiscountCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addDiscountCategoryStmt: %w", cerr)
		}
	}
	if q.addDiscountProductStmt != nil {
		if cerr := q.addDiscountProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addDiscountProductStmt: %w", cerr)
		}
	}
	if q.addProductCategoryStmt != nil {
		if cerr := q.addProductCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addProductCategoryStmt: %w", cerr)
		}
	}
	if q.addVoucherCategoryStmt != nil {
		if cerr := q.addVoucherCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addVoucherCategoryStmt: %w", cerr)
		}
	}
	if q.addVoucherProductStmt != nil {
		if cerr := q.addVoucherProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addVoucherProductStmt: %w", cerr)
		}
	}
	if q.countActiveDiscountsStmt != nil {
		if cerr := q.countActiveDiscountsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countActiveDiscountsStmt: %w", cerr)
		}
	}
	if q.countActiveVouchersStmt != nil {
		if cerr := q.countActiveVouchersStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countActiveVouchersStmt: %w", cerr)
		}
	}
	if q.countCategoryProductsStmt != nil {
		if cerr := q.countCategoryProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countCategoryProductsStmt: %w", cerr)
		}
	}
	if q.countDiscountsStmt != nil {
		if cerr := q.countDiscountsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countDiscountsStmt: %w", cerr)
		}
	}
	if q.countProductVariantsStmt != nil {
		if cerr := q.countProductVariantsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countProductVariantsStmt: %w", cerr)
		}
	}
	if q.countProductsStmt != nil {
		if cerr := q.countProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countProductsStmt: %w", cerr)
		}
	}
	if q.countProductsByStatusStmt != nil {
		if cerr := q.countProductsByStatusStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countProductsByStatusStmt: %w", cerr)
		}
	}
	if q.countStoreCategoriesStmt != nil {
		if cerr := q.countStoreCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countStoreCategoriesStmt: %w", cerr)
		}
	}
	if q.countStoreCategoriesByParentStmt != nil {
		if cerr := q.countStoreCategoriesByParentStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countStoreCategoriesByParentStmt: %w", cerr)
		}
	}
	if q.countStoresStmt != nil {
		if cerr := q.countStoresStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countStoresStmt: %w", cerr)
		}
	}
	if q.countStoresByOwnerStmt != nil {
		if cerr := q.countStoresByOwnerStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countStoresByOwnerStmt: %w", cerr)
		}
	}
	if q.countVouchersStmt != nil {
		if cerr := q.countVouchersStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing countVouchersStmt: %w", cerr)
		}
	}
	if q.createDiscountStmt != nil {
		if cerr := q.createDiscountStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createDiscountStmt: %w", cerr)
		}
	}
	if q.createProductStmt != nil {
		if cerr := q.createProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createProductStmt: %w", cerr)
		}
	}
	if q.createProductImageStmt != nil {
		if cerr := q.createProductImageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createProductImageStmt: %w", cerr)
		}
	}
	if q.createProductVariantStmt != nil {
		if cerr := q.createProductVariantStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createProductVariantStmt: %w", cerr)
		}
	}
	if q.createStoreStmt != nil {
		if cerr := q.createStoreStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createStoreStmt: %w", cerr)
		}
	}
	if q.createStoreCategoryStmt != nil {
		if cerr := q.createStoreCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createStoreCategoryStmt: %w", cerr)
		}
	}
	if q.createVoucherStmt != nil {
		if cerr := q.createVoucherStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createVoucherStmt: %w", cerr)
		}
	}
	if q.deleteDiscountStmt != nil {
		if cerr := q.deleteDiscountStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteDiscountStmt: %w", cerr)
		}
	}
	if q.deleteProductStmt != nil {
		if cerr := q.deleteProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteProductStmt: %w", cerr)
		}
	}
	if q.deleteProductImageStmt != nil {
		if cerr := q.deleteProductImageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteProductImageStmt: %w", cerr)
		}
	}
	if q.deleteProductImagesStmt != nil {
		if cerr := q.deleteProductImagesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteProductImagesStmt: %w", cerr)
		}
	}
	if q.deleteProductVariantStmt != nil {
		if cerr := q.deleteProductVariantStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteProductVariantStmt: %w", cerr)
		}
	}
	if q.deleteProductVariantsStmt != nil {
		if cerr := q.deleteProductVariantsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteProductVariantsStmt: %w", cerr)
		}
	}
	if q.deleteStoreStmt != nil {
		if cerr := q.deleteStoreStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteStoreStmt: %w", cerr)
		}
	}
	if q.deleteStoreCategoryStmt != nil {
		if cerr := q.deleteStoreCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteStoreCategoryStmt: %w", cerr)
		}
	}
	if q.deleteVariantImagesStmt != nil {
		if cerr := q.deleteVariantImagesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteVariantImagesStmt: %w", cerr)
		}
	}
	if q.deleteVoucherStmt != nil {
		if cerr := q.deleteVoucherStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteVoucherStmt: %w", cerr)
		}
	}
	if q.getCategoryProductsStmt != nil {
		if cerr := q.getCategoryProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCategoryProductsStmt: %w", cerr)
		}
	}
	if q.getDiscountStmt != nil {
		if cerr := q.getDiscountStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getDiscountStmt: %w", cerr)
		}
	}
	if q.getDiscountByCodeStmt != nil {
		if cerr := q.getDiscountByCodeStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getDiscountByCodeStmt: %w", cerr)
		}
	}
	if q.getDiscountCategoriesStmt != nil {
		if cerr := q.getDiscountCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getDiscountCategoriesStmt: %w", cerr)
		}
	}
	if q.getDiscountProductsStmt != nil {
		if cerr := q.getDiscountProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getDiscountProductsStmt: %w", cerr)
		}
	}
	if q.getGalleryProductImagesStmt != nil {
		if cerr := q.getGalleryProductImagesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getGalleryProductImagesStmt: %w", cerr)
		}
	}
	if q.getMainProductImageStmt != nil {
		if cerr := q.getMainProductImageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getMainProductImageStmt: %w", cerr)
		}
	}
	if q.getProductStmt != nil {
		if cerr := q.getProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductStmt: %w", cerr)
		}
	}
	if q.getProductBySlugStmt != nil {
		if cerr := q.getProductBySlugStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductBySlugStmt: %w", cerr)
		}
	}
	if q.getProductCategoriesStmt != nil {
		if cerr := q.getProductCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductCategoriesStmt: %w", cerr)
		}
	}
	if q.getProductImageStmt != nil {
		if cerr := q.getProductImageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductImageStmt: %w", cerr)
		}
	}
	if q.getProductVariantStmt != nil {
		if cerr := q.getProductVariantStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductVariantStmt: %w", cerr)
		}
	}
	if q.getStoreStmt != nil {
		if cerr := q.getStoreStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getStoreStmt: %w", cerr)
		}
	}
	if q.getStoreBySlugStmt != nil {
		if cerr := q.getStoreBySlugStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getStoreBySlugStmt: %w", cerr)
		}
	}
	if q.getStoreCategoryStmt != nil {
		if cerr := q.getStoreCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getStoreCategoryStmt: %w", cerr)
		}
	}
	if q.getStoreCategoryBySlugStmt != nil {
		if cerr := q.getStoreCategoryBySlugStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getStoreCategoryBySlugStmt: %w", cerr)
		}
	}
	if q.getThumbnailProductImageStmt != nil {
		if cerr := q.getThumbnailProductImageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getThumbnailProductImageStmt: %w", cerr)
		}
	}
	if q.getVariantByBarcodeStmt != nil {
		if cerr := q.getVariantByBarcodeStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVariantByBarcodeStmt: %w", cerr)
		}
	}
	if q.getVariantBySKUStmt != nil {
		if cerr := q.getVariantBySKUStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVariantBySKUStmt: %w", cerr)
		}
	}
	if q.getVoucherStmt != nil {
		if cerr := q.getVoucherStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVoucherStmt: %w", cerr)
		}
	}
	if q.getVoucherByCodeStmt != nil {
		if cerr := q.getVoucherByCodeStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVoucherByCodeStmt: %w", cerr)
		}
	}
	if q.getVoucherCategoriesStmt != nil {
		if cerr := q.getVoucherCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVoucherCategoriesStmt: %w", cerr)
		}
	}
	if q.getVoucherProductsStmt != nil {
		if cerr := q.getVoucherProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVoucherProductsStmt: %w", cerr)
		}
	}
	if q.incrementDiscountUsageStmt != nil {
		if cerr := q.incrementDiscountUsageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing incrementDiscountUsageStmt: %w", cerr)
		}
	}
	if q.incrementVoucherUsageStmt != nil {
		if cerr := q.incrementVoucherUsageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing incrementVoucherUsageStmt: %w", cerr)
		}
	}
	if q.listActiveDiscountsStmt != nil {
		if cerr := q.listActiveDiscountsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listActiveDiscountsStmt: %w", cerr)
		}
	}
	if q.listActiveVouchersStmt != nil {
		if cerr := q.listActiveVouchersStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listActiveVouchersStmt: %w", cerr)
		}
	}
	if q.listDiscountsStmt != nil {
		if cerr := q.listDiscountsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listDiscountsStmt: %w", cerr)
		}
	}
	if q.listFeaturedProductsStmt != nil {
		if cerr := q.listFeaturedProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listFeaturedProductsStmt: %w", cerr)
		}
	}
	if q.listProductImagesStmt != nil {
		if cerr := q.listProductImagesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listProductImagesStmt: %w", cerr)
		}
	}
	if q.listProductVariantsStmt != nil {
		if cerr := q.listProductVariantsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listProductVariantsStmt: %w", cerr)
		}
	}
	if q.listProductsStmt != nil {
		if cerr := q.listProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listProductsStmt: %w", cerr)
		}
	}
	if q.listProductsByStatusStmt != nil {
		if cerr := q.listProductsByStatusStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listProductsByStatusStmt: %w", cerr)
		}
	}
	if q.listRootStoreCategoriesStmt != nil {
		if cerr := q.listRootStoreCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listRootStoreCategoriesStmt: %w", cerr)
		}
	}
	if q.listStoreCategoriesStmt != nil {
		if cerr := q.listStoreCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listStoreCategoriesStmt: %w", cerr)
		}
	}
	if q.listStoreCategoriesByParentStmt != nil {
		if cerr := q.listStoreCategoriesByParentStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listStoreCategoriesByParentStmt: %w", cerr)
		}
	}
	if q.listStoresStmt != nil {
		if cerr := q.listStoresStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listStoresStmt: %w", cerr)
		}
	}
	if q.listStoresByOwnerStmt != nil {
		if cerr := q.listStoresByOwnerStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listStoresByOwnerStmt: %w", cerr)
		}
	}
	if q.listVariantImagesStmt != nil {
		if cerr := q.listVariantImagesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listVariantImagesStmt: %w", cerr)
		}
	}
	if q.listVouchersStmt != nil {
		if cerr := q.listVouchersStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listVouchersStmt: %w", cerr)
		}
	}
	if q.removeAllProductCategoriesStmt != nil {
		if cerr := q.removeAllProductCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing removeAllProductCategoriesStmt: %w", cerr)
		}
	}
	if q.removeDiscountCategoryStmt != nil {
		if cerr := q.removeDiscountCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing removeDiscountCategoryStmt: %w", cerr)
		}
	}
	if q.removeDiscountProductStmt != nil {
		if cerr := q.removeDiscountProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing removeDiscountProductStmt: %w", cerr)
		}
	}
	if q.removeProductCategoryStmt != nil {
		if cerr := q.removeProductCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing removeProductCategoryStmt: %w", cerr)
		}
	}
	if q.removeVoucherCategoryStmt != nil {
		if cerr := q.removeVoucherCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing removeVoucherCategoryStmt: %w", cerr)
		}
	}
	if q.removeVoucherProductStmt != nil {
		if cerr := q.removeVoucherProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing removeVoucherProductStmt: %w", cerr)
		}
	}
	if q.updateDiscountStmt != nil {
		if cerr := q.updateDiscountStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateDiscountStmt: %w", cerr)
		}
	}
	if q.updateImageSortOrderStmt != nil {
		if cerr := q.updateImageSortOrderStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateImageSortOrderStmt: %w", cerr)
		}
	}
	if q.updateProductStmt != nil {
		if cerr := q.updateProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateProductStmt: %w", cerr)
		}
	}
	if q.updateProductCategoriesStmt != nil {
		if cerr := q.updateProductCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateProductCategoriesStmt: %w", cerr)
		}
	}
	if q.updateProductImageStmt != nil {
		if cerr := q.updateProductImageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateProductImageStmt: %w", cerr)
		}
	}
	if q.updateProductInventoryStmt != nil {
		if cerr := q.updateProductInventoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateProductInventoryStmt: %w", cerr)
		}
	}
	if q.updateProductVariantStmt != nil {
		if cerr := q.updateProductVariantStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateProductVariantStmt: %w", cerr)
		}
	}
	if q.updateStoreStmt != nil {
		if cerr := q.updateStoreStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateStoreStmt: %w", cerr)
		}
	}
	if q.updateStoreCategoryStmt != nil {
		if cerr := q.updateStoreCategoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateStoreCategoryStmt: %w", cerr)
		}
	}
	if q.updateVariantInventoryStmt != nil {
		if cerr := q.updateVariantInventoryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateVariantInventoryStmt: %w", cerr)
		}
	}
	if q.updateVoucherStmt != nil {
		if cerr := q.updateVoucherStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateVoucherStmt: %w", cerr)
		}
	}
	return err
}

func (q *Queries) exec(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) (sql.Result, error) {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).ExecContext(ctx, args...)
	case stmt != nil:
		return stmt.ExecContext(ctx, args...)
	default:
		return q.db.ExecContext(ctx, query, args...)
	}
}

func (q *Queries) query(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) (*sql.Rows, error) {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).QueryContext(ctx, args...)
	case stmt != nil:
		return stmt.QueryContext(ctx, args...)
	default:
		return q.db.QueryContext(ctx, query, args...)
	}
}

func (q *Queries) queryRow(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) *sql.Row {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).QueryRowContext(ctx, args...)
	case stmt != nil:
		return stmt.QueryRowContext(ctx, args...)
	default:
		return q.db.QueryRowContext(ctx, query, args...)
	}
}

type Queries struct {
	db DBTX
	tx *sql.Tx
	addDiscountCategoryStmt          *sql.Stmt
	addDiscountProductStmt           *sql.Stmt
	addProductCategoryStmt           *sql.Stmt
	addVoucherCategoryStmt           *sql.Stmt
	addVoucherProductStmt            *sql.Stmt
	countActiveDiscountsStmt         *sql.Stmt
	countActiveVouchersStmt          *sql.Stmt
	countCategoryProductsStmt        *sql.Stmt
	countDiscountsStmt               *sql.Stmt
	countProductVariantsStmt         *sql.Stmt
	countProductsStmt                *sql.Stmt
	countProductsByStatusStmt        *sql.Stmt
	countStoreCategoriesStmt         *sql.Stmt
	countStoreCategoriesByParentStmt *sql.Stmt
	countStoresStmt                  *sql.Stmt
	countStoresByOwnerStmt           *sql.Stmt
	countVouchersStmt                *sql.Stmt
	createDiscountStmt               *sql.Stmt
	createProductStmt                *sql.Stmt
	createProductImageStmt           *sql.Stmt
	createProductVariantStmt         *sql.Stmt
	createStoreStmt                  *sql.Stmt
	createStoreCategoryStmt          *sql.Stmt
	createVoucherStmt                *sql.Stmt
	deleteDiscountStmt               *sql.Stmt
	deleteProductStmt                *sql.Stmt
	deleteProductImageStmt           *sql.Stmt
	deleteProductImagesStmt          *sql.Stmt
	deleteProductVariantStmt         *sql.Stmt
	deleteProductVariantsStmt        *sql.Stmt
	deleteStoreStmt                  *sql.Stmt
	deleteStoreCategoryStmt          *sql.Stmt
	deleteVariantImagesStmt          *sql.Stmt
	deleteVoucherStmt                *sql.Stmt
	getCategoryProductsStmt          *sql.Stmt
	getDiscountStmt                  *sql.Stmt
	getDiscountByCodeStmt            *sql.Stmt
	getDiscountCategoriesStmt        *sql.Stmt
	getDiscountProductsStmt          *sql.Stmt
	getGalleryProductImagesStmt      *sql.Stmt
	getMainProductImageStmt          *sql.Stmt
	getProductStmt                   *sql.Stmt
	getProductBySlugStmt             *sql.Stmt
	getProductCategoriesStmt         *sql.Stmt
	getProductImageStmt              *sql.Stmt
	getProductVariantStmt            *sql.Stmt
	getStoreStmt                     *sql.Stmt
	getStoreBySlugStmt               *sql.Stmt
	getStoreCategoryStmt             *sql.Stmt
	getStoreCategoryBySlugStmt       *sql.Stmt
	getThumbnailProductImageStmt     *sql.Stmt
	getVariantByBarcodeStmt          *sql.Stmt
	getVariantBySKUStmt              *sql.Stmt
	getVoucherStmt                   *sql.Stmt
	getVoucherByCodeStmt             *sql.Stmt
	getVoucherCategoriesStmt         *sql.Stmt
	getVoucherProductsStmt           *sql.Stmt
	incrementDiscountUsageStmt       *sql.Stmt
	incrementVoucherUsageStmt        *sql.Stmt
	listActiveDiscountsStmt          *sql.Stmt
	listActiveVouchersStmt           *sql.Stmt
	listDiscountsStmt                *sql.Stmt
	listFeaturedProductsStmt         *sql.Stmt
	listProductImagesStmt            *sql.Stmt
	listProductVariantsStmt          *sql.Stmt
	listProductsStmt                 *sql.Stmt
	listProductsByStatusStmt         *sql.Stmt
	listRootStoreCategoriesStmt      *sql.Stmt
	listStoreCategoriesStmt          *sql.Stmt
	listStoreCategoriesByParentStmt  *sql.Stmt
	listStoresStmt                   *sql.Stmt
	listStoresByOwnerStmt            *sql.Stmt
	listVariantImagesStmt            *sql.Stmt
	listVouchersStmt                 *sql.Stmt
	removeAllProductCategoriesStmt   *sql.Stmt
	removeDiscountCategoryStmt       *sql.Stmt
	removeDiscountProductStmt        *sql.Stmt
	removeProductCategoryStmt        *sql.Stmt
	removeVoucherCategoryStmt        *sql.Stmt
	removeVoucherProductStmt         *sql.Stmt
	updateDiscountStmt               *sql.Stmt
	updateImageSortOrderStmt         *sql.Stmt
	updateProductStmt                *sql.Stmt
	updateProductCategoriesStmt      *sql.Stmt
	updateProductImageStmt           *sql.Stmt
	updateProductInventoryStmt       *sql.Stmt
	updateProductVariantStmt         *sql.Stmt
	updateStoreStmt                  *sql.Stmt
	updateStoreCategoryStmt          *sql.Stmt
	updateVariantInventoryStmt       *sql.Stmt
	updateVoucherStmt                *sql.Stmt
}

func (q *Queries) WithTx(tx *sql.Tx) *Queries {
	return &Queries{
		db:                               tx,
		tx:                               tx,
		addDiscountCategoryStmt:          q.addDiscountCategoryStmt,
		addDiscountProductStmt:           q.addDiscountProductStmt,
		addProductCategoryStmt:           q.addProductCategoryStmt,
		addVoucherCategoryStmt:           q.addVoucherCategoryStmt,
		addVoucherProductStmt:            q.addVoucherProductStmt,
		countActiveDiscountsStmt:         q.countActiveDiscountsStmt,
		countActiveVouchersStmt:          q.countActiveVouchersStmt,
		countCategoryProductsStmt:        q.countCategoryProductsStmt,
		countDiscountsStmt:               q.countDiscountsStmt,
		countProductVariantsStmt:         q.countProductVariantsStmt,
		countProductsStmt:                q.countProductsStmt,
		countProductsByStatusStmt:        q.countProductsByStatusStmt,
		countStoreCategoriesStmt:         q.countStoreCategoriesStmt,
		countStoreCategoriesByParentStmt: q.countStoreCategoriesByParentStmt,
		countStoresStmt:                  q.countStoresStmt,
		countStoresByOwnerStmt:           q.countStoresByOwnerStmt,
		countVouchersStmt:                q.countVouchersStmt,
		createDiscountStmt:               q.createDiscountStmt,
		createProductStmt:                q.createProductStmt,
		createProductImageStmt:           q.createProductImageStmt,
		createProductVariantStmt:         q.createProductVariantStmt,
		createStoreStmt:                  q.createStoreStmt,
		createStoreCategoryStmt:          q.createStoreCategoryStmt,
		createVoucherStmt:                q.createVoucherStmt,
		deleteDiscountStmt:               q.deleteDiscountStmt,
		deleteProductStmt:                q.deleteProductStmt,
		deleteProductImageStmt:           q.deleteProductImageStmt,
		deleteProductImagesStmt:          q.deleteProductImagesStmt,
		deleteProductVariantStmt:         q.deleteProductVariantStmt,
		deleteProductVariantsStmt:        q.deleteProductVariantsStmt,
		deleteStoreStmt:                  q.deleteStoreStmt,
		deleteStoreCategoryStmt:          q.deleteStoreCategoryStmt,
		deleteVariantImagesStmt:          q.deleteVariantImagesStmt,
		deleteVoucherStmt:                q.deleteVoucherStmt,
		getCategoryProductsStmt:          q.getCategoryProductsStmt,
		getDiscountStmt:                  q.getDiscountStmt,
		getDiscountByCodeStmt:            q.getDiscountByCodeStmt,
		getDiscountCategoriesStmt:        q.getDiscountCategoriesStmt,
		getDiscountProductsStmt:          q.getDiscountProductsStmt,
		getGalleryProductImagesStmt:      q.getGalleryProductImagesStmt,
		getMainProductImageStmt:          q.getMainProductImageStmt,
		getProductStmt:                   q.getProductStmt,
		getProductBySlugStmt:             q.getProductBySlugStmt,
		getProductCategoriesStmt:         q.getProductCategoriesStmt,
		getProductImageStmt:              q.getProductImageStmt,
		getProductVariantStmt:            q.getProductVariantStmt,
		getStoreStmt:                     q.getStoreStmt,
		getStoreBySlugStmt:               q.getStoreBySlugStmt,
		getStoreCategoryStmt:             q.getStoreCategoryStmt,
		getStoreCategoryBySlugStmt:       q.getStoreCategoryBySlugStmt,
		getThumbnailProductImageStmt:     q.getThumbnailProductImageStmt,
		getVariantByBarcodeStmt:          q.getVariantByBarcodeStmt,
		getVariantBySKUStmt:              q.getVariantBySKUStmt,
		getVoucherStmt:                   q.getVoucherStmt,
		getVoucherByCodeStmt:             q.getVoucherByCodeStmt,
		getVoucherCategoriesStmt:         q.getVoucherCategoriesStmt,
		getVoucherProductsStmt:           q.getVoucherProductsStmt,
		incrementDiscountUsageStmt:       q.incrementDiscountUsageStmt,
		incrementVoucherUsageStmt:        q.incrementVoucherUsageStmt,
		listActiveDiscountsStmt:          q.listActiveDiscountsStmt,
		listActiveVouchersStmt:           q.listActiveVouchersStmt,
		listDiscountsStmt:                q.listDiscountsStmt,
		listFeaturedProductsStmt:         q.listFeaturedProductsStmt,
		listProductImagesStmt:            q.listProductImagesStmt,
		listProductVariantsStmt:          q.listProductVariantsStmt,
		listProductsStmt:                 q.listProductsStmt,
		listProductsByStatusStmt:         q.listProductsByStatusStmt,
		listRootStoreCategoriesStmt:      q.listRootStoreCategoriesStmt,
		listStoreCategoriesStmt:          q.listStoreCategoriesStmt,
		listStoreCategoriesByParentStmt:  q.listStoreCategoriesByParentStmt,
		listStoresStmt:                   q.listStoresStmt,
		listStoresByOwnerStmt:            q.listStoresByOwnerStmt,
		listVariantImagesStmt:            q.listVariantImagesStmt,
		listVouchersStmt:                 q.listVouchersStmt,
		removeAllProductCategoriesStmt:   q.removeAllProductCategoriesStmt,
		removeDiscountCategoryStmt:       q.removeDiscountCategoryStmt,
		removeDiscountProductStmt:        q.removeDiscountProductStmt,
		removeProductCategoryStmt:        q.removeProductCategoryStmt,
		removeVoucherCategoryStmt:        q.removeVoucherCategoryStmt,
		removeVoucherProductStmt:         q.removeVoucherProductStmt,
		updateDiscountStmt:               q.updateDiscountStmt,
		updateImageSortOrderStmt:         q.updateImageSortOrderStmt,
		updateProductStmt:                q.updateProductStmt,
		updateProductCategoriesStmt:      q.updateProductCategoriesStmt,
		updateProductImageStmt:           q.updateProductImageStmt,
		updateProductInventoryStmt:       q.updateProductInventoryStmt,
		updateProductVariantStmt:         q.updateProductVariantStmt,
		updateStoreStmt:                  q.updateStoreStmt,
		updateStoreCategoryStmt:          q.updateStoreCategoryStmt,
		updateVariantInventoryStmt:       q.updateVariantInventoryStmt,
		updateVoucherStmt:                q.updateVoucherStmt,
	}
}
