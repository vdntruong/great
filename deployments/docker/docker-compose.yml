version: '3'

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.115.1
    command: --config=/etc/otelcol-contrib/config.yml
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
      - "55679:55679" # zpages extension
    volumes:
      - ./otel-collector:/etc/otelcol-contrib
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v3.0.1
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:1.64.0
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # OTLP gRPC receiver
      - "14268:14268"  # Accept Thrift spans
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - monitoring

  loki:
    image: grafana/loki:3.2.2
    command: -config.file=/etc/loki/loki-config.yml
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki
      - loki-data:/loki
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:11.4.0
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    networks:
      - monitoring

  auth-ms:
    build:
      context: .
      dockerfile: ../../services/auth-ms/deployments/Dockerfile
    ports:
      - "8081:8080"
    networks:
      - backend
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`api-user.theg.localhost`)"
      - "traefik.http.routers.auth.entrypoints=web,websecure"

  user-ms:
    build:
      context: .
      dockerfile: ../../services/user-ms/deployments/Dockerfile
    ports:
      - "8082:8080"
    networks:
      - backend
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=Host(`api-auth.theg.localhost`)"
      - "traefik.http.routers.user.entrypoints=web,websecure"

  reverse-proxy:
    image: traefik:v3.2.1
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # web UI (enabled by --api-insecure=true)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../services/gateway/traefik.yml:/etc/traefik/traefik.yml:ro
      - ../../services/gateway/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml
    depends_on:
      - user-ms
      - auth-ms
    networks:
      - backend
      - frontend
      - monitoring

networks:
  backend:
  frontend:
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
  loki-data:
  grafana-data:
